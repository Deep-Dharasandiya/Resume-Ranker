import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_app2/HomePageApplicant.dart';
import 'dart:convert';
import 'package:http/http.dart' as http;
import 'dart:typed_data';

import 'LoaderHomePageToApplyforjob.dart';

class show_vacancy extends StatefulWidget {
  show_vacancy(this.email,this.data2,this.data3);
  final String email;
  List data2 =[],data3 =[];
  @override
  _HomeState2 createState() => new _HomeState2(email);
}

class _HomeState2 extends State<show_vacancy> {
  _HomeState2(email);

  //String base64Image='
 // Uint8List bytes = base64Decode('VEhwc2NVeDZVa0pSVmtaVVlURndTMVZ0WkVKUmEwWlNVVlZHUWxWVlJrTlJWVVpGVEhwS00xRnJVa0pSVjJSSVVXMWthbEl3U2xKYU1HaERaREpPUzFFeFJtNVRNRkpEVlZVMVJWRllUazFTUlVweVZUQldNMDlHVmtsVmJUbHRVMGRuZDFsVmFFTmtNbVJMVVhwU2RWTlZUa3BqTUd3MFpESk9URkpIVG5kVVJWSkNaVVUxUlZWVVFrbGxWMDB4VlVaU2JtVldRa1JPU0hCUFVrVjNkazF1WkVOU1JVWlNZVEJ3UkZWWVpFMVNSVXB1Vkd0U1Uxb3piRXBWYm1SdlZGZHdTbVZWTVhGVFdHeE9ZV3RzTlZSWGNFcGxWVEZ4VTFoc1RtRnJiRFZVVjNCS1pWVXhjVk5ZYkU1aGEydzFWRmR3U21WVk1YRlRXR3hPWVd0c05WUlhjRXBsVlRGeFUxaHNUbUZyYkRWVVYzQktaVlV4Y1ZSRE9UTmFNRVpUVVRCR1VFc3dSakpPUlZKQ1ZUQnNRbEZYYUVaUmEwWTBVbFZKZGs5R1JrSlNNbVJDVVZWR2JsUlZTa0pWVlVaQ1VWVkdRbEZWUmtKUlZVWkNVVlZHUWxGVlJrNVJhMFp1VlZWYVEyUnBPVVpSVlVwcVVXdEdVbEpWU2tKVlZVWkNVVlZHUWxGVlJrSlJWVVpDVVZWR1FsRlZSa0pSYTBadVZVTTRlVm93Ums1UldHUkdVVlZHYjFGVlVrWlJWVVpDVVZoV2QxTjZWVEZQVldSSFVtcEtUVTVHVmxkTlZ6RjNWMWhPZFZaSGREQlRSemcxVTBjeGJWVnNiM2xrTUU1V1VWVk9VbE5xVlhKT01qVlRUVVJXZGxZeGFFeFZWVEZIVVZSQ1ZsSkdTbEpVVlZwdldsWmFOVmRGZEVOWk0wSkxWMWRrUWxGWFpIUlZNMEphVTFWd2IxVXhiRVppVlU1Q1VWVnNjbEZWVGxSUlYzUjVWMWQwYm1KVlJrdFJNSEJ' );
  //List data2 = [{"year": '2019'}, {"year": '2018'}, {"year": '2017'}, {"year": '2016'}, {"year": '2015'}, {"year": '2014'}, {"year": '2013'}, {"year": '2012'}, {"year": '2011'}, {"year": '2010'}, {"year": '2009'}, {"year": '2008'}, {"year": '2007'}, {"year": '2006'}, {"year": '2005'}, {"year": '2003'}, {"year": '2002'}, {"year": '2001'}, {"year": '2000'}];
  Uint8List bytes;
  @override
  Widget build(BuildContext context) {

    // var spacecrafts = ["Deep","James Web","Enterprise","Hubble","Kepler","Juno","Casini","Columbia","Challenger","Huygens","Galileo","Apollo","Spitzer","WMAP","Swift","Atlantis"];
    var listItem = new
      ListView.builder(
      // itemCount: spacecrafts.length,
      itemCount: (widget.data2).length,
      itemBuilder: (BuildContext context, int index) {
        bytes = base64Decode(widget.data2[index]["icon"]);
        print(widget.data2.length);
        return  WillPopScope(
            onWillPop: () async {
              Navigator.push(context, MaterialPageRoute(builder: (context){
                return  Homepage(widget.email);
              }));
              return false;
            },
         child: ListTile(

          title: new Card(

            //color: Colors.yellowAccent,
            elevation: 5.0,
            child: new Container(
              height: 70,
              child:Container(
                child:Row(
                  children: <Widget>[
                    Container(
                      margin: EdgeInsets.fromLTRB(5.0, 5.0, 10.0, 5.0),
                      height:50,
                      width: 50,
                      decoration: new BoxDecoration(
                          shape: BoxShape.circle,
                          image: new DecorationImage(
                            fit: BoxFit.fill,
                            image: new Image.memory(bytes).image,
                          )
                      ),
                    ),

                    Column(
                      children: <Widget>[
                        Row(
                          children: <Widget>[
                            new Text('Company Name:- ',style: new TextStyle(
                                fontSize: 15.0, color: Colors.black),),
                            new Text(widget.data2[index]['name'],style: new TextStyle(
                                fontSize: 17.0, color: Colors.blue),),
                          ],
                        ),
                        Row(
                          children: <Widget>[
                            new Text('Number of Vacancy:- ',style: new TextStyle(
                                fontSize: 15.0, color: Colors.black),),
                            new Text(widget.data2[index]['no'],style: new TextStyle(
                                fontSize: 17.0, color: Colors.green),),
                          ],
                        ),
                        Row(
                          children: <Widget>[
                            new Text('Name of Post:- ',style: new TextStyle(
                                fontSize: 15.0, color: Colors.black),),
                            new Text(widget.data2[index]['post'],style: new TextStyle(
                                fontSize: 17.0, color: Colors.red),),
                          ],
                        ),
                      ],
                    ),

                  ],
                ),

              ),
            ),
          ),
          onTap: () {

            showDialog(
                context: context,
                builder: (context) {
                  return AlertDialog(
                    title: Text('Confirmation'),
                    content: Text('Are you Sure apply for job '),
                    actions: <Widget>[
                      new FlatButton(
                        child: new Text('Accept'),
                        onPressed: () {
                           Navigator.push(context, MaterialPageRoute(builder: (context){
                            return LoderHomePageToApplyforjob(widget.email,widget.data2[index]['name'],widget.data2[index]['email'],widget.data2[index]['post']);
                          }));
                        },
                      ),
                      new FlatButton(
                        child: new Text('Decline'),
                        onPressed: () {
                          Navigator.of(context).pop();
                        },
                      )
                    ],
                  );
                });
          },
        ),
        );
      },
    );

    return new Scaffold(
      appBar: new AppBar(
          title: new Text("Flutter ")
      ),
       body: listItem,
    );
  }
}
